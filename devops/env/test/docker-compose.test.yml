version: '3.7'

networks:
  MySocializusNetwork:
    driver: bridge
  TraefikGlobalProxy:
    external: true

services: 
  sonarqube:
    image: sonarqube:community
    hostname: sonarqube
    container_name: sonarqube
    restart: unless-stopped
    depends_on:
      - db
    environment:
      SONAR_JDBC_URL: jdbc:postgresql://db:5432/sonar
      SONAR_JDBC_USERNAME: sonar
      SONAR_JDBC_PASSWORD: sonar
    volumes:
      - sonarqube_data:/opt/sonarqube/data
      - sonarqube_extensions:/opt/sonarqube/extensions
      - sonarqube_logs:/opt/sonarqube/logs
    networks:
      - TraefikGlobalProxy 
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=TraefikGlobalProxy"
      - "traefik.http.routers.sonarqube-secure.entrypoints=websecure"
      - "traefik.http.routers.sonarqube-secure.rule=Host(`${SONARQUBE_URL}`)"
      - "traefik.http.routers.sonarqube-secure.service=sonarqube"
      - "traefik.http.services.sonarqube.loadbalancer.server.port=${SONARQUBE_PORT}"
#     - "traefik.http.routers.sonarqube-secure.middlewares=ipwhitelist-for-socializus-tools@file" # we apply our middleware 
  db:
    image: postgres:12
    hostname: postgresql
    container_name: postgresql
    restart: unless-stopped
    environment:
      POSTGRES_USER: sonar
      POSTGRES_PASSWORD: sonar
      POSTGRES_DB: sonar
    volumes:
      - postgresql:/var/lib/postgresql
      - postgresql_data:/var/lib/postgresql/data
    networks:
      - TraefikGlobalProxy 

  portainer:
    image: portainer/portainer-ce:2.17.1-alpine
    container_name: portainer
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    command:
      - '--admin-password=${PORTAINER_ADMIN_PASSWORD}'
      - '--no-analytics'
    networks:
      - TraefikGlobalProxy
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - portainer-data:/data
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=TraefikGlobalProxy"
      - "traefik.http.routers.portainer-secure.entrypoints=websecure"
      - "traefik.http.routers.portainer-secure.rule=Host(`${PORTAINER_URL}`)"
      - "traefik.http.routers.portainer-secure.service=portainer"
      - "traefik.http.services.portainer.loadbalancer.server.port=${PORTAINER_PORT}"   
#     - "traefik.http.routers.portainer-secure.middlewares=ipwhitelist-for-socializus-tools@file" # we apply our middleware 
      
volumes:
  sonarqube_conf:
  sonarqube_data:
  sonarqube_extensions:
  sonarqube_bundled-plugins:
  postgresql:
  postgresql_data:
  portainer-data:

  